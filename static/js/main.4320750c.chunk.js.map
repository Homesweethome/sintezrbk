{"version":3,"sources":["components/semiconductors.jsx","components/boards.jsx","components/capacitors.jsx","components/circuits.jsx","components/engines.jsx","components/installationproducts.jsx","components/lamps.jsx","components/mechanics.jsx","components/phones.jsx","components/resistors.jsx","components/tdks.jsx","components/wires.jsx","App.js","serviceWorker.js","index.js"],"names":["Semiconductors","disableHeight","width","headerHeight","rowHeight","height","rowCount","data","length","rowGetter","index","label","dataKey","React","Component","Boards","Capacitors","Circuits","Engines","InstallationProducts","Lamps","Mechanics","Phones","Resistors","Tdks","Wires","allyProps","id","TabPanel","props","children","value","other","Typography","component","role","hidden","aria-labelledby","Box","p","theme","createMuiTheme","palette","type","App","useState","setValue","ThemeProvider","AppBar","position","Tabs","onChange","event","newValue","variant","Tab","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4320750c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/semiconductors.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Semiconductors extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\nexport default Semiconductors;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/boards.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Boards extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\nexport default Boards;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/capacitors.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Capacitors extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\n\r\nexport default Capacitors;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/circuits.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Circuits extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\nexport default Circuits;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/engines.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Engines extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\nexport default Engines;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/installationproducts.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass InstallationProducts extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\nexport default InstallationProducts;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/lamps.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Lamps extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\nexport default Lamps;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/mechanics.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Mechanics extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\nexport default Mechanics;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/phones.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Phones extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\nexport default Phones;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/resistors.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Resistors extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\nexport default Resistors;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/tdks.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Tdks extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\n\r\nexport default Tdks;","import React from \"react\";\r\nimport {Column, Table, AutoSizer } from \"react-virtualized\";\r\n\r\nimport data from '../data/wires.json';\r\nimport 'react-virtualized/styles.css';\r\n\r\nclass Wires extends React.Component {\r\n    render() {\r\n        return <AutoSizer disableHeight>\r\n            {({width}) => (\r\n                <Table \r\n                headerHeight={20}\r\n                rowHeight={30}\r\n                height={800}\r\n                width={width}\r\n                rowCount={data.length}\r\n                rowGetter={({index}) => data[index]}>\r\n                    <Column width={128} label=\"Номер\" dataKey=\"a\" />    \r\n                    <Column width={128} label=\"Наименование\" dataKey=\"b\" />  \r\n                    <Column width={128} label=\"Тип\" dataKey=\"c\" />  \r\n                    <Column width={128} label=\"Изгот-ль\" dataKey=\"d\" />  \r\n                    <Column width={128} label=\"Ед.\" dataKey=\"e\" />  \r\n                    <Column width={128} label=\"Кол-во\" dataKey=\"f\" />  \r\n                    <Column width={128} label=\"Цена\" dataKey=\"g\" />  \r\n                    <Column width={128} label=\"Доп. информация\" dataKey=\"h\" />                \r\n                </Table>    \r\n            )}\r\n            </AutoSizer>        \r\n    }\r\n}\r\nexport default Wires;","import React from 'react';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport Semiconductors from \"./components/semiconductors\";\nimport Boards from \"./components/boards\";\nimport Capacitors from \"./components/capacitors\";\nimport Circuits from \"./components/circuits\";\nimport Engines from \"./components/engines\";\nimport Installationproducts from \"./components/installationproducts\";\nimport Lamps from \"./components/lamps\";\nimport Mechanics from \"./components/mechanics\";\nimport Phones from \"./components/phones\";\nimport Resistors from \"./components/resistors\";\nimport Tdks from \"./components/tdks\";\nimport Wires from \"./components/wires\";\n\nfunction allyProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\n\nlet theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n  }\n});\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} \n            variant=\"fullWidth\">\n          <Tab label=\"Полупроводники\" {...allyProps(0)} />\n          <Tab label=\"Установочные из-я\" {...allyProps(1)} />\n          <Tab label=\"ТДКС\" {...allyProps(2)} />\n          <Tab label=\"Телефоны\" {...allyProps(3)} />\n          <Tab label=\"Резисторы\" {...allyProps(4)} />\n          <Tab label=\"Провода, гнёзда\" {...allyProps(5)} />\n          <Tab label=\"Платы\" {...allyProps(6)} />\n          <Tab label=\"Микросхемы\" {...allyProps(7)} />\n          <Tab label=\"Механика\" {...allyProps(8)} />\n          <Tab label=\"Лампы, радиолампы\" {...allyProps(9)} />\n          <Tab label=\"Конденсаторы\" {...allyProps(10)} />\n          <Tab label=\"Двигатели\" {...allyProps(11)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Semiconductors />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Installationproducts/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Tdks/>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <Phones/>\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        <Resistors/>\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        <Wires/>\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        <Boards/>\n      </TabPanel>\n      <TabPanel value={value} index={7}>\n        <Circuits/>\n      </TabPanel>\n      <TabPanel value={value} index={8}>\n        <Mechanics/>\n      </TabPanel>\n      <TabPanel value={value} index={9}>\n        <Lamps/>\n      </TabPanel>\n      <TabPanel value={value} index={10}>\n        <Capacitors/>\n      </TabPanel>\n      <TabPanel value={value} index={11}>\n        <Engines/>\n      </TabPanel>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}